// <auto-generated />
using System;
using Meal_Planner_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Meal_Planner_Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231024061302_hej")]
    partial class hej
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Meal_Planner_Api.Models.Amount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Amounts");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.CookingTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CookingTimes");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.IngredientAmount", b =>
                {
                    b.Property<int>("ingredientId")
                        .HasColumnType("int");

                    b.Property<int>("amountId")
                        .HasColumnType("int");

                    b.HasKey("ingredientId", "amountId");

                    b.HasIndex("amountId");

                    b.ToTable("IngredientAmounts");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.IngredientUnit", b =>
                {
                    b.Property<int>("ingredientId")
                        .HasColumnType("int");

                    b.Property<int>("unitId")
                        .HasColumnType("int");

                    b.HasKey("ingredientId", "unitId");

                    b.HasIndex("unitId");

                    b.ToTable("IngredientUnits");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.PreparationTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PreparationTimes");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CookingTimeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreparationTimeId")
                        .HasColumnType("int");

                    b.Property<int?>("ServingsId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("categoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CookingTimeId");

                    b.HasIndex("PreparationTimeId");

                    b.HasIndex("ServingsId");

                    b.HasIndex("UserId");

                    b.HasIndex("categoryId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.RecipeRating", b =>
                {
                    b.Property<int>("RecipeID")
                        .HasColumnType("int");

                    b.Property<int>("RatingID")
                        .HasColumnType("int");

                    b.HasKey("RecipeID", "RatingID");

                    b.HasIndex("RatingID");

                    b.ToTable("RecipeRatings");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.RecipeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RecipeSchedules");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Servings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Servings");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Measurement")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.UserRating", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RatingId");

                    b.HasIndex("RatingId");

                    b.ToTable("UserRating");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.IngredientAmount", b =>
                {
                    b.HasOne("Meal_Planner_Api.Models.Amount", "amount")
                        .WithMany("ingredientAmount")
                        .HasForeignKey("amountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meal_Planner_Api.Models.Ingredient", "ingredient")
                        .WithMany("IngredientAmount")
                        .HasForeignKey("ingredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("amount");

                    b.Navigation("ingredient");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.IngredientUnit", b =>
                {
                    b.HasOne("Meal_Planner_Api.Models.Ingredient", "ingredient")
                        .WithMany("IngredientUnit")
                        .HasForeignKey("ingredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meal_Planner_Api.Models.Unit", "unit")
                        .WithMany("ingredientUnit")
                        .HasForeignKey("unitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ingredient");

                    b.Navigation("unit");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Instruction", b =>
                {
                    b.HasOne("Meal_Planner_Api.Models.Recipe", "Recipe")
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Recipe", b =>
                {
                    b.HasOne("Meal_Planner_Api.Models.CookingTime", "CookingTime")
                        .WithMany("Recipe")
                        .HasForeignKey("CookingTimeId");

                    b.HasOne("Meal_Planner_Api.Models.PreparationTime", "PreparationTime")
                        .WithMany("Recipe")
                        .HasForeignKey("PreparationTimeId");

                    b.HasOne("Meal_Planner_Api.Models.Servings", "Servings")
                        .WithMany("Recipe")
                        .HasForeignKey("ServingsId");

                    b.HasOne("Meal_Planner_Api.Models.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId");

                    b.HasOne("Meal_Planner_Api.Models.Category", "category")
                        .WithMany("Recipes")
                        .HasForeignKey("categoryId");

                    b.Navigation("CookingTime");

                    b.Navigation("PreparationTime");

                    b.Navigation("Servings");

                    b.Navigation("User");

                    b.Navigation("category");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.RecipeIngredient", b =>
                {
                    b.HasOne("Meal_Planner_Api.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Meal_Planner_Api.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.RecipeRating", b =>
                {
                    b.HasOne("Meal_Planner_Api.Models.Rating", "Rating")
                        .WithMany("RecipeRating")
                        .HasForeignKey("RatingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meal_Planner_Api.Models.Recipe", "Recipe")
                        .WithMany("RecipeRating")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rating");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.RecipeSchedule", b =>
                {
                    b.HasOne("Meal_Planner_Api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.UserRating", b =>
                {
                    b.HasOne("Meal_Planner_Api.Models.Rating", "Rating")
                        .WithMany("UserRating")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meal_Planner_Api.Models.User", "User")
                        .WithMany("UserRating")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rating");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Amount", b =>
                {
                    b.Navigation("ingredientAmount");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.CookingTime", b =>
                {
                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Ingredient", b =>
                {
                    b.Navigation("IngredientAmount");

                    b.Navigation("IngredientUnit");

                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.PreparationTime", b =>
                {
                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Rating", b =>
                {
                    b.Navigation("RecipeRating");

                    b.Navigation("UserRating");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Recipe", b =>
                {
                    b.Navigation("Instructions");

                    b.Navigation("RecipeIngredients");

                    b.Navigation("RecipeRating");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Servings", b =>
                {
                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.Unit", b =>
                {
                    b.Navigation("ingredientUnit");
                });

            modelBuilder.Entity("Meal_Planner_Api.Models.User", b =>
                {
                    b.Navigation("Recipes");

                    b.Navigation("UserRating");
                });
#pragma warning restore 612, 618
        }
    }
}
